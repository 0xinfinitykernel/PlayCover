name: Build nightly release
on:
  schedule:
    - cron: "30 19 * * *"
env:
  CI: true
jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies
        shell: bash
        run: |
          brew install graphicsmagick imagemagick
          bundle install
          npm install --global create-dmg

      - name: Set build number
        shell: bash
        run: |
          fastlane run increment_build_number build_number:${{ github.run_number }}

      - name: Fastlane Release
        shell: bash
        run: fastlane release
        env:
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT: 120 # x86 is slooooooow

      - name: Exract API_KEY
        shell: bash
        run: 'echo "$API_KEY" > apikey.json'
        env:
          API_KEY: ${{secrets.APPLE_API_KEY_JSON}}

      - name: Create DMG
        shell: bash
        run: |
          create-dmg ./output/PlayCover.app ./output
          mv ./output/*.dmg ./output/PlayCover_nightly_${{ github.run_number }}.dmg

      - name: Notarize DMG
        continue-on-error: true
        shell: bash
        run: |
          fastlane notarize_dmg package:output/PlayCover_nightly_${{ github.run_number }}.dmg

      - name: Clean Up
        shell: bash
        run: rm apikey.json

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: PlayCover_nightly_${{ github.run_number }}.dmg
          path: output/PlayCover_nightly_${{ github.run_number }}.dmg

  bump-sparkle:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: Playcover/playcover.github.io
          ref: website

      - name: Download Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          path: ./updates/

      - name: Update appcast.xml
        run: |
          # Download sparkle tools
          mkdir sparkle
          curl -L "https://github.com/sparkle-project/Sparkle/releases/download/2.2.1/Sparkle-2.2.1.tar.xz" -o sparkle.tar.xz
          tar -xf sparkle.tar.xz -C sparkle

          # import signing key
          echo ${{ secrets.SPARKLE_KEY }} > sparkle_key_b64
          base64 -d -i sparkle_key_b64 -o sparkle_key
          ./sparkle/bin/generate_keys -f sparkle_key

          # generate the appcast
          ./sparkle/bin/generate_appcast ./updates -channel nightly

      - name: Commit changes
        run: |
          git config --local user.email "$GITHUB_EMAIL"
          git config --local user.name "$GITHUB_USERNAME"
          git commit -m "chore: my comment" -a
        env:
          GITHUB_USERNAME: github-actions[bot]
          GITHUB_EMAIL: actions@github.com

      - name: Push changes on Website
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.WEBSITE_PAT }}
          branch: website
